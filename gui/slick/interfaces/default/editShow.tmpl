#import sickbeard
#from sickbeard import common
#from sickbeard import exceptions
#from sickbeard import scene_exceptions
#set global $title="Edit " + $show.name
#set global $header=$show.name

#set global $sbPath=".."

#set global $topmenu="home"
#import os.path
#include $os.path.join($sickbeard.PROG_DIR, "gui/slick/interfaces/default/inc_top.tmpl")

#if $varExists('header') 
	<h1 class="header">$header</h1>
#else 
	<h1 class="title">$title</h1>
#end if
<script type="text/javascript" src="$sbRoot/js/jquery.multicolumn-autocomplete.js"></script>

<script type="text/javascript" src="$sbRoot/js/qualityChooser.js?$sbPID"></script>
<script type="text/javascript" charset="utf-8">
<!--
\$(document).ready(function(){

  \$.getJSON('$sbRoot/home/addShows/getTVDBLanguages', {}, function(data) {
        var resultStr = '';

        if (data.results.length == 0) {
            flag = ' class="flag" style="background-image:url($sbRoot/images/flags/${show.lang}.png)"';
            resultStr = '<option value="$show.lang" selected="selected" + flag>$show.lang</option>';
        } else {
            var current_lang_added = false;
            \$.each(data.results, function(index, obj) {

                if (obj == "$show.lang") {
                	selected = ' selected="selected"';
                    current_lang_added = true;
                }
                else {
                    selected = '';
                }

                flag = ' class="flag" style="background-image:url($sbRoot/images/flags/' + obj + '.png);"';
                resultStr += '<option value="' + obj + '"' + selected + flag + '>' + obj + '</option>';
            });
            if (!current_lang_added)
                resultStr += '<option value="$show.lang" selected="selected">$show.lang</option>';

        }
        \$('#tvdbLangSelect').html(resultStr)

  });
  
});

\$(document).ready(function(){
  \$.fn.showHideAnimeSettings = function() {
        if (\$('#anime').attr('checked')) {
            \$('#animeSettings').show()
        } else {
            \$('#animeSettings').hide()
        }
    }
  
  \$('#anime').change(function(){
      \$(this).showHideAnimeSettings();
  });
    
  \$(this).showHideAnimeSettings();


	\$("#addToListText").mcautocomplete({
		// These next two options are what this plugin adds to the autocomplete widget.
	    showHeader: true,
	    columns: 
	    [
		    {
		    	name: "Name",
		    	width: "150px"
		    },
		    {
		    	name: "Rating",
		    	width: "80px"
		    },
		    {
		    	name: "Ep. Range",
		    	width: "120px"
		    }
		 ],
		 columnToSearch: "Name",
		 // Event handler for when a list item is selected.
	    select: function(event, ui) {
	        this.value = (ui.item ? ui.item[0] : '');
	        
	        return false;
	    },
    	// The rest of the options are for configuring the ajax webservice call.
        minLength: 1,
	    source: 
	    [
	        #for group in $groups
	            #set $totalPercentage=0
	            #set $bars=""
	            #for range in $group.get('range').split(","):
	                #set $epRange=$range.split("-")
	                #if $totalPercentage > 0
						#set $percentage=int($epRange[0])*100/int($highest_episode)-$totalPercentage
						#set $totalPercentage+=$percentage
				
						#set $bars+="<div class='notdone' style='width: "+ str($percentage) + "%'></div>"
					#end if
					
					#set $percentage=int($epRange[-1])*100/int($highest_episode)-$totalPercentage
					#set $totalPercentage+=$percentage
				
					#set $bars+="<div class='done' style='width: "+ str($percentage) + "%'></div>"
				#end for
	    		#set $bars+="<div class='notdone' style='width: "+ str(100-$totalPercentage) + "%'></div>"
	    		[
	    			"$group.get('name')",
	    			"$group.get('rating')",
	    			"<div style='margin:auto;width: 100px' class='epsRangeBar'>$bars</div>"
	    		],
	        #end for
	    ]
	    
	});
 });
 
//-->
</script>


<form action="editShow" method="post">
<input type="hidden" name="show" value="$show.tvdbid" />
<b>Location:</b> <input type="text" name="location" id="location" value="$show._location" size="50" /><br />
<br />
<b>Quality:</b>
#set $qualities = $common.Quality.splitQuality(int($show.quality))
#set global $anyQualities = $qualities[0]
#set global $bestQualities = $qualities[1]
#include $os.path.join($sickbeard.PROG_DIR, "gui/slick/interfaces/default/inc_qualityChooser.tmpl")
<br />

<b>Scene Exception:</b>
<input type="text" id="SceneName"> 
<input class="btn" type="button" value="Add" id="addSceneName"><br />

<div id="SceneException" >

	<div class="component-group-desc">
		<p>This will <b>affect the episode show search</b> on nzb and torrent provider.<br />
		This list overrides the original name, it doesn't append to it.<br />
		</p>
	</div>		
	
	<div class="float-left" style="padding-bottom: 40px; text-align:center;">
		<h4>Exceptions List</h4>
		<select id="exceptions_list" name="exceptions_list" multiple="multiple" style="min-width:10em;" >
				#for $cur_exception in $show.exceptions:
					<option value="$cur_exception">$cur_exception</option>
				#end for
		</select>
	<div>	
		<input id="removeSceneName" value="Remove" class="btn float-left" type="button" style="margin-top: 10px;"/>
	</div>	
<br />
</div>	
</div>
<br />
<br />

<b>Info Language:</b> <select name="tvdbLang" id="tvdbLangSelect"></select><br />
Note: This will only affect the language of the retrieved metadata file contents and episode filenames.<br />
This <b>DOES NOT</b> allow Sick Beard to download non-english TV episodes!<br />
<br />

<b>Flatten files (no folders):</b> <input type="checkbox" name="flatten_folders" #if $show.flatten_folders == 1 and not $sickbeard.NAMING_FORCE_FOLDERS then "checked=\"checked\"" else ""# #if $sickbeard.NAMING_FORCE_FOLDERS then "disabled=\"disabled\"" else ""#/><br /><br />
<b>Paused:</b> <input type="checkbox" name="paused" #if $show.paused == 1 then "checked=\"checked\"" else ""# /><br /><br />
<b>Subtitles:</b> <input type="checkbox" name="subtitles"#if $show.subtitles == 1 and $sickbeard.USE_SUBTITLES then " checked=\"checked\"" else ""##if not $sickbeard.USE_SUBTITLES then " disabled=\"disabled\"" else ""#/><br /><br />
<b>Air by date: </b> 
<input type="checkbox" name="air_by_date" #if $show.air_by_date == 1 then "checked=\"checked\"" else ""# /><br />
(check this if the show is released as Show.03.02.2010 rather than Show.S02E03) 
<br /><br />
<b>Anime: </b>
<input type="checkbox" name="anime" #if $show.anime then "CHECKED" else ""# id="anime"><br />

<div id="animeSettings">
	<b>Absolute Numbering: </b>
	<input type="checkbox" name="absolute_numbering" #if $show.absolute_numbering then "CHECKED" else ""# id="absolute_numbering"><br />
	(check this if the show is released as Show.265 rather than Show.S02E03.)<br/><br/>

	Release Groups:<br/>
	
	<input type="text" id="addToListText"/>	<input type="button" value="Add to White" id="addToWhite" class="btn">	<input type="button" value="Add to Black" id="addToBlack" class="btn"><br/>
	<div class="blackwhitelist">
		<div class="whitelist">
			<h4>White</h4>
			<select multiple id="white">
					#for $keyword in $whitelist:
						<option value="$keyword">$keyword</option>
					#end for
			</select><br/>
			<input id="removeFromWhite" value="Remove" type="button" class="btn"/>
			
		</div>
		
		<div class="move">
			<input id="moveToBlack" value="&gt;&gt;" type="button" class="btn"/><br/>
			<input id="moveToWhite" value="&lt;&lt;" type="button" class="btn"/>
		</div>
		
		<div class="blacklist">
			<h4>Black</h4>
			<select multiple id="black">
				#for $keyword in $blacklist:
					<option value="$keyword">$keyword</option>
				#end for
			</select>
			<br/>
			<input id="removeFromBlack" value="Remove" type="button" class="btn"/>
		</div>
	</div>
</div>

<input type="hidden" name="whitelist" id="whitelist"/>
<input type="hidden" name="blacklist" id="blacklist"/>
<br /><br />

<input type="submit" id="submit" value="Submit" class="btn btn-primary" />
</form>

<script type="text/javascript" charset="utf-8">
<!--
   	var all_exceptions = new Array;

    jQuery('#location').fileBrowser({ title: 'Select Show Location' });
   
    \$('#submit').click(function(){
		all_exceptions = []
		
		\$("#exceptions_list option").each  ( function() {
			all_exceptions.push( \$(this).val() );
	    });
		
		\$("#exceptions_list").val(all_exceptions);
		
		var realvalues = [];

		\$('#white option').each(function(i, selected) {
		    realvalues[i] = \$(selected).val();
		});
		\$("#whitelist").val(realvalues.join(","));
		
		realvalues = [];
		\$('#black option').each(function(i, selected) {
		    realvalues[i] = \$(selected).val();
		});
		\$("#blacklist").val(realvalues.join(","));
		
	});  
   
    \$('#addSceneName').click(function() {
        var scene_ex = \$('#SceneName').val()
        var option = \$("<option>")
		all_exceptions = []
			
	    \$("#exceptions_list option").each  ( function() {
	       all_exceptions.push( \$(this).val() )
	    });
        
        \$('#SceneName').val('')
        
        if (jQuery.inArray(scene_ex, all_exceptions) > -1 || (scene_ex == ''))
        	return

		\$("#SceneException").show()

        option.attr("value",scene_ex)
        option.html(scene_ex)
        return option.appendTo('#exceptions_list');
    });
    
    \$('#removeSceneName').click(function() {
		\$('#exceptions_list option:selected').remove();
		
		\$(this).toggle_SceneException()
    });
    
   $.fn.toggle_SceneException = function() {
   		all_exceptions = []
   		
   		\$("#exceptions_list option").each  ( function() {
			all_exceptions.push( \$(this).val() );
	    });
	    
		if (all_exceptions == '')
			\$("#SceneException").hide();
		else
			\$("#SceneException").show();
	}

	\$(this).toggle_SceneException();
	
	\$('#moveToWhite').click(function() {
	 	return !\$('#black option:selected').remove().appendTo('#white');
	});
	\$('#moveToBlack').click(function() {
	 	return !\$('#white option:selected').remove().appendTo('#black');
	});
	\$('#removeFromWhite').click(function() {
	 	return !\$('#white option:selected').remove();
	});
	\$('#removeFromBlack').click(function() {
	 	return !\$('#black option:selected').remove();
	});
	
    \$('#addToWhite').click(function() {
        var group = \$('#addToListText').attr("value")
        if(group == "")
            return
        \$('#addToListText').attr("value", "")
        var option = \$("<option>")
        option.attr("value",group)
        option.html(group)
        return option.appendTo('#white');
    });
    \$('#addToBlack').click(function() {
        var group = \$('#addToListText').attr("value")
        if(group == "")
            return
        \$('#addToListText').attr("value", "")
        var option = \$("<option>")
        option.attr("value",group)
        option.html(group)
        return option.appendTo('#black');
    });
    
//-->
</script>

#include $os.path.join($sickbeard.PROG_DIR,"gui/slick/interfaces/default/inc_bottom.tmpl")
